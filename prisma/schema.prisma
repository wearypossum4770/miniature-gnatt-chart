datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = "native"

}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  firstName  String
  middleName String?
  lastName   String
  username   String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  roles String @default("user")
  password   Password?
  notes      Note[]
  projects   Project[]
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Project {
  id            String         @id @default(cuid())
  title         String
  progress      Int            @default(0)
  status        String
  documentOwner String
  documentId    Int
  dateArchived  DateTime?
  dateDeleted   DateTime?
  dateStarting  DateTime?
  dateEnding    DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  boards        ProjectBoard[]
  user          User           @relation(fields: [documentOwner], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model ProjectBoard {
  id        String   @id @default(cuid())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String
  key       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
