# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: 🚀 Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  quality:
    name: ⬣ Biome
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: 🔬 Run Biome
        run: biome ci .

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ⎔ Setup BUN
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: canary
          # cache: npm
          # cache-dependency-path: ./package.json
          # node-version: 18

      - name: 📥 Install deps
        run: bun install --bun --smol --prefer-offline

      - name: Prisma Generate
        run: bunx --bun prisma generate

      - name: 🔎 Type check
        run: bun run --bun --smol --prefer-offline --if-present typecheck

      - name: ⚡ Run bun:test
        # bail <number> || 1  *bail after specified number of errors*
        # coverage  *generate a coverage profile
        run: bun test --bun --smol --prefer-offline --coverage --bail
        # to use vitest
        # run: npm run test -- --coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [quality, typecheck]
    # only deploy main/dev branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
